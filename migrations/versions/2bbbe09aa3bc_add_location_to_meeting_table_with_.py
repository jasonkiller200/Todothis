"""Add location to Meeting table with naming convention

Revision ID: 2bbbe09aa3bc
Revises: 66594349a4c4
Create Date: 2025-08-14 16:59:19.446878

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '2bbbe09aa3bc'
down_revision = '66594349a4c4'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('_alembic_tmp_discussion_item')
    with op.batch_alter_table('discussion_item', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               nullable=False,
               autoincrement=True)
        batch_op.alter_column('meeting_id',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.alter_column('topic',
               existing_type=sa.TEXT(),
               nullable=False)
        batch_op.create_unique_constraint(batch_op.f('uq_discussion_item_meeting_id'), ['meeting_id'])

    with op.batch_alter_table('meeting', schema=None) as batch_op:
        batch_op.add_column(sa.Column('location', sa.String(length=200), nullable=True))
        batch_op.create_foreign_key(batch_op.f('fk_meeting_recorder_user_id_user'), 'user', ['recorder_user_id'], ['id'])

    with op.batch_alter_table('meeting_task', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               nullable=False,
               autoincrement=True)
        batch_op.alter_column('meeting_id',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.alter_column('task_type',
               existing_type=sa.VARCHAR(length=50),
               nullable=False)
        batch_op.alter_column('task_description',
               existing_type=sa.TEXT(),
               nullable=False)
        batch_op.alter_column('assigned_by_user_id',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.alter_column('assigned_to_user_id',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.alter_column('status',
               existing_type=sa.VARCHAR(length=50),
               nullable=False)
        batch_op.create_unique_constraint(batch_op.f('uq_meeting_task_todo_id'), ['todo_id'])

    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.create_unique_constraint(batch_op.f('uq_user_email'), ['email'])
        batch_op.create_unique_constraint(batch_op.f('uq_user_user_key'), ['user_key'])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.drop_constraint(batch_op.f('uq_user_user_key'), type_='unique')
        batch_op.drop_constraint(batch_op.f('uq_user_email'), type_='unique')

    with op.batch_alter_table('meeting_task', schema=None) as batch_op:
        batch_op.drop_constraint(batch_op.f('uq_meeting_task_todo_id'), type_='unique')
        batch_op.alter_column('status',
               existing_type=sa.VARCHAR(length=50),
               nullable=True)
        batch_op.alter_column('assigned_to_user_id',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.alter_column('assigned_by_user_id',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.alter_column('task_description',
               existing_type=sa.TEXT(),
               nullable=True)
        batch_op.alter_column('task_type',
               existing_type=sa.VARCHAR(length=50),
               nullable=True)
        batch_op.alter_column('meeting_id',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               nullable=True,
               autoincrement=True)

    with op.batch_alter_table('meeting', schema=None) as batch_op:
        batch_op.drop_constraint(batch_op.f('fk_meeting_recorder_user_id_user'), type_='foreignkey')
        batch_op.drop_column('location')

    with op.batch_alter_table('discussion_item', schema=None) as batch_op:
        batch_op.drop_constraint(batch_op.f('uq_discussion_item_meeting_id'), type_='unique')
        batch_op.alter_column('topic',
               existing_type=sa.TEXT(),
               nullable=True)
        batch_op.alter_column('meeting_id',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               nullable=True,
               autoincrement=True)

    op.create_table('_alembic_tmp_discussion_item',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('meeting_id', sa.INTEGER(), nullable=False),
    sa.Column('topic', sa.TEXT(), nullable=False),
    sa.Column('reporter_user_id', sa.INTEGER(), nullable=True),
    sa.Column('created_at', sa.DATETIME(), nullable=True),
    sa.Column('updated_at', sa.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['meeting_id'], ['meeting.id'], ),
    sa.ForeignKeyConstraint(['reporter_user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('meeting_id')
    )
    # ### end Alembic commands ###
